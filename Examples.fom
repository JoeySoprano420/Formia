ðŸ”¹ Variables & Constants

Let X = 0;
Let Y = 1;
Let counter = 9;
Let label == start_here;

ðŸ”¹ Logic & Flow

Start: if [X < Y] -> then
    | CMP X, Y;
      JL label_then;
    |
Return;

Start: for [counter > 0] -> loop
    | MOV RAX, counter;
      DEC counter;
      JNZ loop;
    |
Return;

ðŸ”¹ Memory & Type Constructs

Start: new |buffer| = 128;
    | CALL malloc;
      MOV [buffer], RAX;
    |
Return;

Start: delete |buffer|;
    | MOV RDI, buffer;
      CALL free;
    |
Return;

ðŸ”¹ Arithmetic

Start: calc
    X = X + Y;
    X = X * 2;
    X = X / Y;
    X = X - 1;
Return;

âœ… Example 1: Embedded Bootloader

Start: boot
    Let X = 0;
    new buffer = 128;
    if [X < 5] -> continue;
Return;

âœ… Example 2: Teaching Conditional Jumps

Start: lesson_one
    Let score = 75;
    if [score > 60] -> pass;
Return;

âœ… Example 3: Runtime-Executable Spec Outline

Start: process_spec
    Let flag == SYSTEM_READY;
    buffer = flag + 2;
Return;


